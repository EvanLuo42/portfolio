---
interface Props {
	title: string;
}

const { title } = Astro.props;

import HeaderBar from "@/components/header-bar.tsx"
import {Separator} from "@/components/ui/separator"
import '@/styles/globals.css'
---

<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<header class="top-0 w-full">
			<HeaderBar client:load></HeaderBar>
		</header>
		<div class="flex flex-col items-center justify-center pt-5 pb-5 xl:pl-32 xl:pr-32 2xl:pl-64 2xl:pr-64 pl-5 pr-5">
			<slot />
		</div>
		<footer>
			<Separator></Separator>
			<div class="bottom-0 flex justify-center items-center p-4">
				<p>Â©Copyright ZiYun Luo Evan. All rights reserved.</p>
			</div>
		</footer>
	</body>
</html>